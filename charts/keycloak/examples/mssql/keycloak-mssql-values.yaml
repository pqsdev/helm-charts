extraEnv: |
  - name: KEYCLOAK_ADMIN
    valueFrom:
      secretKeyRef:
        name: {{ include "keycloak.fullname" . }}-admin-creds
        key: user
  - name: KEYCLOAK_ADMIN_PASSWORD
    valueFrom:
      secretKeyRef:
        name: {{ include "keycloak.fullname" . }}-admin-creds
        key: password
  - name: KC_HOSTNAME_ADMIN
    value: 'admin.{{ .Release.Name }}.localdev.me'

database:
  vendor: mssql
  url: jdbc:sqlserver://mssql:1433;databaseName=keycloak;encrypt=true;trustServerCertificate=true;
  username: sa
  existingSecret: sqlserver-secret
  database: keycloak

# creates a database if not exists before creating the pods (NOT MANDATORY)
extraInitContainers: |
  - name: init-db
    image: mcr.microsoft.com/mssql-tools
    command:
      - "sh"
      - "-c"
      - "/opt/mssql-tools/bin/sqlcmd -S mssql -U sa -P $SA_PASSWORD -Q \"IF NOT EXISTS(SELECT * FROM sys.databases WHERE name = 'keycloak') CREATE DATABASE keycloak\""
    env:
      - name: SA_PASSWORD
        valueFrom:
          secretKeyRef:
            name: sqlserver-secret
            key: password

ingress:
  # If `true`, an Ingress is created
  enabled: true
  # The name of the Ingress Class associated with this ingress
  ingressClassName: "nginx"
  # The Service port targeted by the Ingress
  servicePort: http
  # Ingress annotations
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: 'HTTP'
    cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
    ## Resolve HTTP 502 error using ingress-nginx:
    ## See https://www.ibm.com/support/pages/502-error-ingress-keycloak-response
    # nginx.ingress.kubernetes.io/proxy-buffer-size: 128k

  # Additional Ingress labels
  labels: {}
   # List of rules for the Ingress
  rules:
    -
      # Ingress host
      host: '{{ .Release.Name }}.localdev.me'
      # Paths for the host
      paths:
        - path: '{{ tpl .Values.http.relativePath $ | trimSuffix "/" }}/realms'
          pathType: Prefix
        - path: '{{ tpl .Values.http.relativePath $ | trimSuffix "/" }}/resources'
          pathType: Prefix
        - path: '{{ tpl .Values.http.relativePath $ | trimSuffix "/" }}/robots.txt'
          pathType: Exact
  console:
    enabled: true
    # The name of Ingress Class associated with the console ingress only
    ingressClassName: "nginx"

    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: 'HTTP'
      cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
    rules:
      -
        # Ingress host
        host: 'admin.{{ .Release.Name }}.localdev.me'
        # Paths for the host
        paths:
          - path: '{{ tpl .Values.http.relativePath $ | trimSuffix "/" }}'
            pathType: Prefix


secrets:
  admin-creds:
    stringData:
      user: admin
      password: secret
